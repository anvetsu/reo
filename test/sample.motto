types:['i 'i 'i "yyyy-MM-dd 00:00:00" 's 's 's 's 'f 'f 'i]
csvopts:dict('delim \tab 'types types)
orders:csv("db/orders.txt" csvopts)
types:['i 'i 'i "yyyy-MM-dd 00:00:00" "yyyy-MM-dd 00:00:00" 'f 'i 'f]
csvopts:assoc(csvopts 'types types)
orderlines:csv("db/orderlines.txt" csvopts)
['tables ['orders, 'orderlines]]

pts:counts(orders('paymenttype))
["Order by PaymentTypes", pts] "Chart"

ords_by_code:fn(c) count_eq(c orders('paymenttype))

tpgrp:fn(a b) group(fn(tp c) if {a <= tp & tp < b c+1 c}, 0 orders('totalprice), orders('paymenttype))
[["0-10" tpgrp(0 10)] ["10-100" tpgrp(10 100)] ["100-1000" tpgrp(100 1000)]]

zipords:group(fn(nord, _) nord+1, 0, orders('numorders), orders('zipcode))

op:counts(orderlines('productid))
["Products" op]

numprods:count_group(orderlines('orderlineid), orderlines('productid))
numords:fn(prodcount) {prods:filter(fn(x) x(1) = prodcount, op)
                       pids:keys(prods)
		       [count(pids) mn(pids) mx(pids)]}
ords:collect_once(fn(i) numords(i), vals(op))
sort(fn(x y) x(0) < y(0), ords)

"Simple examples"
types:['i 's 'i]
csvopts:dict('types types 'headers ['id 'name 'days])
tenures:csv("test/data/tenure.csv" csvopts)
top(5 tenures)

dtom:fn(d) d / 12.0
d:pairs(tenures('name) dtom~tenures('days))
["Presidents" d] "Chart"

"stat"
honest_baker:fn(mean sd) repeatedly(^draw(gauss(mean sd)))
hbs:lift(10000 honest_baker(1000 30))
c1:histogram(hbs ['x_label:"Honest baker" 'nbins:25 'visible:0b])

dishonest_baker:fn(mean sd) (partial(apply max))~(partition(13 repeatedly(^draw(gauss(mean sd)))))
dbs:lift(10000 dishonest_baker(950 30))
c2:histogram(dbs ['x_label:"Dishonest baker" 'nbins:25 'visible:0b])

skew1:qq_plot(hbs ['visible:0b])
skew2:qq_plot(dbs ['visible:0b])

bp:box_plot(hbs ['legend:1b 'y_label:"Loaf weight (g)" 'series_label:"Honest baker" 'visible:0b])
add_box_plot(bp dbs ['series_label:"Dishonest baker"])

ecdf_h:cdf_empirical(hbs)
ecdf_dh:cdf_empirical(dbs)
xyp:xy_plot(hbs ecdf_h~hbs ['x_label:"Loaf weight" 'y_label:"Probability"
			    'legend:1b 'series_label:"Honest baker" 'visible:0b])
add_lines(xyp dbs ecdf_dh~dbs ['series_label:"Dishonest baker"])

dfmt:"yyyy-MM-dd"
p:regex("T")
trimtm:fn(s) dt(first(str_split(s p)) dfmt)
data:csv("/home/vijay/Downloads/ch2-inference/data/dwell-times.tsv" ['delim:\tab 'headers:['date 'dwell_time] 'types:[trimtm 'i]])
h:histogram(data('dwell_time) ['x_label:"Dwell time (s)" 'nbins:20 'visible:0b])
chart_set_axis(h 'y log_axis(['label:"Log frequency"]))